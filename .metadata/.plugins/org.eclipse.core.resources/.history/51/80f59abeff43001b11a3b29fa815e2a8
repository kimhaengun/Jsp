package com.cos.hello.controller;
import java.io.IOException;

import javax.servlet.ServletException;
//javax로 시작하는 패키지는 톰켓이 들고 있는 라이브러리
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

public class UserController extends HttpServlet{
	//req와 res는 톰켓이 만들어준다(사용자(클라이언트)요청이 있을 때 마다)
	//req는 BufferedReader 할 수 있는 ByteStream
	//res는 BufferedWriter 할 수 있는 ByteStream 
	
	//http://localhost:8000/hello/front
	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		doProcess(req, resp);
	}
	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
 //어? 포스트요청왔네 그럼 내가 디비 연결 인서트하면되겠네
		System.out.println("comment post 요청");
		doProcess(req, resp);
	}
	protected void doProcess(HttpServletRequest req, HttpServletResponse resp) {
		System.out.println("comment process 요청");
		System.out.println("UserController 실행됨");
		
		String gubun = req.getParameter("gubun"); // =/hello/front
		System.out.println(gubun);
		route(gubun, req, resp);
	}
	
	private void route(String gubun, HttpServletRequest req, HttpServletResponse resp)throws ServletException, IOException {
		if(gubun.equals("login")) {
			resp.sendRedirect("auth/login.jsp"); // 한번더 request
			}else if(gubun.equals("join")) {
				resp.sendRedirect("auth/join.jsp"); // 한번더 request
			}else if(gubun.equals("selectOne")) {
				resp.sendRedirect("user/selectOne.jsp"); // 한번더 request
			}else if(gubun.equals("updateOne")) {
				resp.sendRedirect("user/updateOne.jsp"); // 한번더 request
			}else if(gubun.equals("joinProc")) { // 회원가입 수행해줘
				//데이터 원형  username = ssar&password=1234&email=ssar@nate.com
				//1.Form의 input태그에 있는 3가지 값 username/password/email받기
				String username = req.getParameter("username"); // key 값은 = name값
				//getParameter = 파싱 해주는 함수
				String password = req.getParameter("password"); // key 값은 = name값
				String email = req.getParameter("email"); // key 값은 = name값
				System.out.println("********joinProc Start*********");
				System.out.println(username);
				System.out.println(password);
				System.out.println(email);
				System.out.println("********joinProc Start*********");
				//2.DB에 연결해서 3가지 값을 insert하기
				//3.INSERT가 정상적으로 되었다면  index.jsp를 응답
				resp.sendRedirect("index.jsp");
			}else if(gubun.equals("loginProc")) {
				//1. 전달되는 값 받기
				String username = req.getParameter("username");
				String password = req.getParameter("password");
				System.out.println("********loginProc Start*********");
				System.out.println(username);
				System.out.println(password);
				System.out.println("********loginProc Start*********");
				//2.데이터베이스 값이 있는지 SELECT 해서 확인
				//3.
				HttpSession session = req.getSession();
				session.setAttribute("sessionKey", "9998");
				//4.index.jsp페이지로 이동
				resp.sendRedirect("index.jsp");
			}
		}
}

